# Security scanning and compliance workflow for Case Interview Practice Platform
# Implements requirements from:
# - 8.3.6 Security Testing: Regular security scanning and vulnerability assessment
# - 8.3.5 Compliance Requirements: GDPR, PCI DSS, SOC 2, and CCPA security controls

name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  security_scan:
    name: Security and Compliance Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install Backend Dependencies
        working-directory: src/backend
        run: |
          npm ci
          
      - name: Install Frontend Dependencies
        working-directory: src/web
        run: |
          npm ci

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality

      - name: Setup Snyk
        uses: snyk/actions/setup@latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Backend Scan
        working-directory: src/backend
        run: snyk test --all-projects --severity-threshold=high
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Frontend Scan
        working-directory: src/web
        run: snyk test --all-projects --severity-threshold=high
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          upload: true

      - name: Generate Consolidated Security Report
        run: |
          echo "# Security Scan Results" > security-report.md
          echo "## Scan Time: $(date)" >> security-report.md
          echo "## CodeQL Results" >> security-report.md
          echo "See Security tab for detailed CodeQL findings" >> security-report.md
          echo "## Snyk Results" >> security-report.md
          echo "Backend and Frontend dependency scan results attached" >> security-report.md
          echo "## Trivy Results" >> security-report.md
          echo "Container and filesystem scan results attached" >> security-report.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            security-report.md
            trivy-results.sarif

      - name: Create Issue for Critical Findings
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Critical Security Vulnerabilities Detected',
              body: 'Critical security vulnerabilities were found during the security scan. Please review the security scan results in the workflow artifacts.',
              labels: ['security', 'critical']
            })

      - name: Generate Compliance Report
        run: |
          echo "# Compliance Status Report" > compliance-report.md
          echo "## Scan Time: $(date)" >> compliance-report.md
          echo "## GDPR Compliance" >> compliance-report.md
          echo "- Data encryption verification" >> compliance-report.md
          echo "- Access control validation" >> compliance-report.md
          echo "## PCI DSS Status" >> compliance-report.md
          echo "- Dependency security status" >> compliance-report.md
          echo "- Code security analysis results" >> compliance-report.md
          echo "## SOC 2 Controls" >> compliance-report.md
          echo "- Security monitoring results" >> compliance-report.md
          echo "- Access management verification" >> compliance-report.md
          echo "## CCPA Compliance" >> compliance-report.md
          echo "- Data handling verification" >> compliance-report.md
          echo "- Privacy control status" >> compliance-report.md

      - name: Upload Compliance Report
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md

      - name: Check for Critical Vulnerabilities
        run: |
          if [ -f trivy-results.sarif ] && grep -q '"level":"error"' trivy-results.sarif; then
            echo "Critical vulnerabilities found. Failing the workflow."
            exit 1
          fi