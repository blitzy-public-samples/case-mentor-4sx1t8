{"introduction.purpose": "This Software Requirements Specification (SRS) document provides a comprehensive description of the case interview practice platform. It details the functional and non-functional requirements for developers, project managers, and stakeholders involved in the platform's development and deployment. The document serves as the authoritative reference for technical implementation and acceptance criteria.", "introduction.scope": "The platform is a web-based application designed to help aspiring consultants prepare for case interviews at top consulting firms. Key functionalities include:\n- Six core drill types targeting essential case interview skills:\n  - Case Prompt Drills\n  - Calculations Drills\n  - Case Math Drills\n  - Brainstorming Drills\n  - Market Sizing Drills\n  - Synthesizing Drills\n- McKinsey Eco-System Game Simulator replicating digital assessment\n- Core features:\n  - User authentication and profile management\n  - Subscription-based access tiers\n  - AI-powered feedback and evaluation\n  - Progress tracking and performance analytics\n  - Interview countdown and preparation timeline\n  - Personalized learning paths based on target employers\nThe platform aims to:\n- Democratize access to high-quality case interview preparation\n- Provide consistent, objective feedback through AI evaluation\n- Create a gamified learning experience that maintains engagement\n- Enable structured skill development across key consulting competencies\n- Deliver a scalable practice environment for mass user adoption", "product_description.product_perspective": "The case interview practice platform operates as a standalone web application built on NextJS and React, integrating with several external services:\n- Supabase for database, authentication, and file storage\n- Stripe for payment processing\n- OpenAI services for AI-powered feedback and evaluation\n- Resend for email communications\nThe system architecture follows a modern serverless approach using NextJS edge functions and Vercel hosting, eliminating the need for traditional server infrastructure.", "product_description.product_functions": "The platform provides these core functions:\n1. **Drill Practice System**\n   - Six distinct drill types targeting specific case interview skills\n   - AI-powered evaluation and feedback\n   - Progress tracking and performance analytics\n   - Customizable difficulty levels and configurations\n2. **McKinsey Assessment Simulation**\n   - Digital ecosystem game replication\n   - Time-pressured decision making\n   - Complex data analysis scenarios\n   - Real-time feedback on solutions\n3. **User Management**\n   - Profile creation and customization\n   - Interview date tracking\n   - Target employer preferences\n   - Progress monitoring\n4. **Subscription Management**\n   - Tiered access control\n   - Payment processing\n   - Subscription status tracking\n   - Upgrade pathways", "product_description.user_characteristics": "Primary user personas include:\n1. **College Student**\n   - Age: 20-22\n   - Technical proficiency: High\n   - Available time: 10-15 hours/week\n   - Budget conscious\n   - Seeking entry-level consulting positions\n2. **MBA Candidate**\n   - Age: 26-32\n   - Technical proficiency: Moderate to high\n   - Available time: 5-10 hours/week\n   - Higher budget tolerance\n   - Targeting post-MBA consulting roles\n3. **Career Switcher**\n   - Age: 25-35\n   - Technical proficiency: Moderate\n   - Available time: 5-8 hours/week\n   - Value-focused\n   - Pursuing consulting transition", "product_description.constraints": "1. **Technical Constraints**\n   - Browser compatibility requirements (Chrome, Safari, Firefox, Edge)\n   - Mobile responsiveness limitations for complex simulations\n   - API rate limits from OpenAI services\n   - Supabase database size limitations\n2. **Business Constraints**\n   - Subscription pricing ceiling based on market research\n   - Marketing budget limitations\n   - Development team size\n   - Time-to-market pressure\n3. **Legal Constraints**\n   - GDPR compliance requirements\n   - CCPA compliance requirements\n   - Payment processing regulations\n   - Data protection standards", "product_description.assumptions_and_dependencies": "**Assumptions**\n1. Users have:\n   - Stable internet connection\n   - Modern web browser\n   - Basic computer literacy\n   - English language proficiency\n2. Technical:\n   - OpenAI API maintains current capability levels\n   - Supabase continues supporting current features\n   - Stripe maintains current fee structure\n**Dependencies**\n1. External Services:\n   - OpenAI API availability\n   - Supabase platform stability\n   - Stripe payment processing\n   - Vercel hosting reliability\n   - Resend email delivery\n2. Development:\n   - NextJS framework updates\n   - React library maintenance\n   - TailwindCSS compatibility\n   - Shadcn component library support\n3. Business:\n   - Consulting firm interview processes remain similar\n   - Market demand for case interview preparation\n   - Competitive pricing environment stability", "product_description.process_flowchart": "```mermaid\nflowchart TD\n    A[Landing Page] --> B{User Logged In?}\n    B -->|No| C[Sign Up Flow]\n    B -->|Yes| D[Dashboard]\n    C --> C1[Email Signup]\n    C1 --> C2[Onboarding]\n    C2 --> C3[Target Company Selection]\n    C3 --> C4[Interview Date Setting]\n    C4 --> D\n    D --> E{Select Activity}\n    E -->|Practice Drills| F[Drill Selection]\n    E -->|McKinsey Sim| G[Simulation]\n    F --> F1{Drill Type}\n    F1 -->|Case Prompt| H1[Case Prompt Flow]\n    F1 -->|Calculations| H2[Calculations Flow]\n    F1 -->|Case Math| H3[Case Math Flow]\n    F1 -->|Brainstorming| H4[Brainstorming Flow]\n    F1 -->|Market Sizing| H5[Market Sizing Flow]\n    F1 -->|Synthesizing| H6[Synthesizing Flow]\n    G --> G1{Subscription Check}\n    G1 -->|Free| G2[Demo Version]\n    G1 -->|Paid| G3[Full Version]\n    H1 & H2 & H3 & H4 & H5 & H6 --> I{Free Limit Check}\n    I -->|Limit Reached| J[Subscription Prompt]\n    I -->|Within Limit| K[Exercise Flow]\n    K --> L[AI Evaluation]\n    L --> M[Feedback Display]\n    M --> N{Continue Practice?}\n    N -->|Yes| F\n    N -->|No| D\n    J --> O{Subscribe?}\n    O -->|Yes| P[Payment Flow]\n    O -->|No| D\n    P --> K\n```\n```mermaid\nflowchart TD\n    A[Exercise Flow Detail] --> B{Drill Type}\n    B -->|Case Prompt| C1[Display Scenario]\n    C1 --> C2[Question Phase]\n    C2 --> C3[Solution Phase]\n    C3 --> C4[Submit Response]\n    B -->|Calculations| D1[Show Problem]\n    D1 --> D2[Timer Start]\n    D2 --> D3[Input Answer]\n    D3 --> D4[Submit Response]\n    B -->|Case Math| E1[Present Business Problem]\n    E1 --> E2[Timer Start]\n    E2 --> E3[Input Calculations]\n    E3 --> E4[Submit Response]\n    B -->|Brainstorming| F1[Show Prompt]\n    F1 --> F2[Timer Start]\n    F2 --> F3[Input Ideas]\n    F3 --> F4[Submit Response]\n    B -->|Market Sizing| G1[Present Market]\n    G1 --> G2[Timer Start]\n    G2 --> G3[Input Analysis]\n    G3 --> G4[Submit Response]\n    B -->|Synthesizing| H1[Show Complex Case]\n    H1 --> H2[Timer Start]\n    H2 --> H3[Input Summary]\n    H3 --> H4[Submit Response]\n    C4 & D4 & E4 & F4 & G4 & H4 --> I[AI Processing]\n    I --> J[Generate Feedback]\n    J --> K[Display Results]\n    K --> L[Update Progress]\n```", "functional_requirements.core_features.f1:_user_authentication_and_management": "**Description**: System for user registration, login, and profile management.\n**Priority**: High\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F1.1 | Email Registration | - Collect email and password<br>- Validate email format<br>- Check for existing accounts<br>- Send verification email |\n| F1.2 | Social Authentication | - Support Google OAuth<br>- Link social accounts to existing profiles |\n| F1.3 | Profile Management | - Update personal information<br>- Set target companies<br>- Schedule interview dates<br>- Upload profile picture |\n| F1.4 | Password Management | - Reset via email link<br>- Change password functionality<br>- Password strength requirements |", "functional_requirements.core_features.f2:_drill_system": "**Description**: Core practice drill functionality across six types.\n**Priority**: High\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F2.1 | Drill Selection | - Filter by type, difficulty, industry<br>- Display completion status<br>- Show estimated duration |\n| F2.2 | Drill Execution | - Timer functionality<br>- Progress tracking<br>- Save partial progress<br>- Multiple input methods (text, voice, image) |\n| F2.3 | AI Evaluation | - Real-time response analysis<br>- Scoring based on drill criteria<br>- Detailed feedback generation |\n| F2.4 | Results Display | - Show score and breakdown<br>- Provide sample solutions<br>- Offer improvement suggestions |", "functional_requirements.core_features.f3:_mckinsey_simulation": "**Description**: Digital assessment simulation environment.\n**Priority**: Medium\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F3.1 | Game Setup | - Species selection interface<br>- Habitat configuration<br>- Timer initialization |\n| F3.2 | Simulation Engine | - Food chain calculations<br>- Environmental parameter tracking<br>- Real-time validation |\n| F3.3 | Results Processing | - Success/failure determination<br>- Detailed feedback generation<br>- Performance metrics |", "functional_requirements.core_features.f4:_subscription_management": "**Description**: Payment processing and access control system.\n**Priority**: High\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F4.1 | Plan Management | - Display subscription options<br>- Process upgrades/downgrades<br>- Handle renewals |\n| F4.2 | Payment Processing | - Stripe integration<br>- Support multiple currencies<br>- Handle failed payments |\n| F4.3 | Access Control | - Limit free tier usage<br>- Grant premium features<br>- Manage subscription status |", "functional_requirements.core_features.f5:_progress_tracking": "**Description**: System for monitoring user performance and improvement.\n**Priority**: Medium\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F5.1 | Performance Analytics | - Track completion rates<br>- Calculate success metrics<br>- Generate trend analysis |\n| F5.2 | Progress Dashboard | - Visual performance graphs<br>- Drill type breakdown<br>- Improvement suggestions |\n| F5.3 | Interview Preparation | - Countdown to interview<br>- Recommended practice schedule<br>- Preparation milestones |", "functional_requirements.core_features.f6:_ai_feedback_system": "**Description**: Automated evaluation and feedback generation.\n**Priority**: High\n| ID | Requirement | Details |\n|----|-------------|---------|\n| F6.1 | Response Analysis | - Process text/voice input<br>- Apply scoring criteria<br>- Generate feedback points |\n| F6.2 | Feedback Generation | - Provide specific improvements<br>- Show sample solutions<br>- Highlight strengths/weaknesses |\n| F6.3 | Performance Tracking | - Store historical feedback<br>- Track improvement patterns<br>- Generate trend analysis |", "non-functional_requirements.performance_requirements": "| Category | Requirement | Target Metric |\n|----------|-------------|---------------|\n| Response Time | API Endpoint Response | < 200ms for 95% of requests |\n| Response Time | Page Load Time | < 2s initial load, < 500ms subsequent loads |\n| Response Time | AI Feedback Generation | < 5s for drill evaluation |\n| Throughput | Concurrent Users | Support 1000+ simultaneous users |\n| Resource Usage | Client Memory | < 100MB RAM usage |\n| Resource Usage | Database Queries | < 50ms query execution time |\n| Resource Usage | Edge Function Execution | < 50ms execution time |", "non-functional_requirements.safety_requirements": "| Category | Requirement | Implementation |\n|----------|-------------|----------------|\n| Data Backup | Regular Backups | - Daily automated Supabase backups<br>- 30-day retention period<br>- Point-in-time recovery capability |\n| Failure Recovery | System Resilience | - Automatic failover for critical services<br>- Graceful degradation of non-critical features<br>- Error boundary implementation in React components |\n| Data Loss Prevention | Progress Protection | - Auto-save every 30 seconds during drills<br>- Local storage backup of user input<br>- Session recovery after connection loss |\n| System Monitoring | Health Checks | - Real-time performance monitoring<br>- Automated alert system<br>- Error logging and tracking |", "non-functional_requirements.security_requirements": "| Category | Requirement | Implementation |\n|----------|-------------|----------------|\n| Authentication | User Identity | - Email verification required<br>- Strong password policy<br>- OAuth 2.0 social login<br>- JWT token management |\n| Authorization | Access Control | - Role-based access control<br>- Subscription tier enforcement<br>- API route protection<br>- Resource access validation |\n| Data Protection | Encryption | - Data-at-rest encryption<br>- TLS 1.3 for data in transit<br>- Secure cookie handling<br>- PII encryption |\n| Privacy | User Data | - GDPR compliance tools<br>- Data deletion capability<br>- Privacy policy enforcement<br>- Data access logs |", "non-functional_requirements.quality_requirements": "| Category | Requirement | Target Metric |\n|----------|-------------|---------------|\n| Availability | System Uptime | 99.9% availability |\n| Maintainability | Code Quality | - 80% test coverage<br>- Automated CI/CD pipeline<br>- Documentation requirements<br>- Code review process |\n| Usability | User Experience | - Mobile-responsive design<br>- WCAG 2.1 AA compliance<br>- < 3 clicks to core features<br>- Intuitive navigation |\n| Scalability | Growth Support | - Support 100% user growth per month<br>- Horizontal scaling capability<br>- CDN implementation<br>- Database partitioning |\n| Reliability | Error Rate | - < 0.1% error rate for critical operations<br>- < 1% drill evaluation errors<br>- Zero data loss guarantee |", "non-functional_requirements.compliance_requirements": "| Category | Requirement | Implementation |\n|----------|-------------|----------------|\n| Data Privacy | GDPR | - User consent management<br>- Data portability<br>- Right to be forgotten<br>- Privacy policy compliance |\n| Regional | CCPA | - California privacy rights<br>- Data collection disclosure<br>- Opt-out mechanisms |\n| Financial | PCI DSS | - Secure payment processing<br>- Card data handling<br>- Audit trail maintenance |\n| Accessibility | WCAG | - Screen reader compatibility<br>- Keyboard navigation<br>- Color contrast requirements<br>- Alt text for images |\n| Industry | ISO 27001 | - Information security management<br>- Risk assessment procedures<br>- Security controls implementation |", "data_requirements.data_models.core_entities_relationship_diagram": "```mermaid\nerDiagram\n    User ||--o{ Subscription : has\n    User ||--o{ DrillAttempt : completes\n    User ||--o{ SimulationAttempt : completes\n    User {\n        uuid id PK\n        string email\n        string password_hash\n        string first_name\n        string last_name\n        string target_company\n        date interview_date\n        json background_info\n        timestamp created_at\n        timestamp updated_at\n    }\n    Subscription {\n        uuid id PK\n        uuid user_id FK\n        string stripe_subscription_id\n        string plan_type\n        timestamp start_date\n        timestamp end_date\n        boolean is_active\n        timestamp created_at\n    }\n    DrillAttempt ||--o{ DrillFeedback : receives\n    DrillAttempt {\n        uuid id PK\n        uuid user_id FK\n        uuid drill_id FK\n        string response\n        int score\n        timestamp completion_time\n        json metadata\n        timestamp created_at\n    }\n    Drill {\n        uuid id PK\n        string type\n        string difficulty\n        string category\n        string industry\n        json content\n        boolean is_active\n        timestamp created_at\n    }\n    DrillFeedback {\n        uuid id PK\n        uuid drill_attempt_id FK\n        json feedback_content\n        timestamp created_at\n    }\n    SimulationAttempt {\n        uuid id PK\n        uuid user_id FK\n        json selected_species\n        json habitat_config\n        boolean success\n        int duration\n        timestamp created_at\n    }\n```", "data_requirements.data_models.simulation_data_model": "```mermaid\nerDiagram\n    Location ||--o{ Species : contains\n    Location {\n        uuid id PK\n        int depth\n        float temperature\n        float salt_content\n        float water_current\n        boolean is_demo\n    }\n    Species ||--o{ FoodChain : participates\n    Species {\n        uuid id PK\n        string name\n        string type\n        int calories_needed\n        int calories_provided\n        json depth_range\n        json temperature_range\n        json salt_range\n        json current_range\n        boolean is_demo\n    }\n    FoodChain {\n        uuid id PK\n        uuid predator_id FK\n        uuid prey_id FK\n        int priority\n    }\n```", "data_requirements.data_storage.primary_storage_(supabase_postgresql)": "| Data Category | Retention Period | Backup Frequency | Storage Type |\n|---------------|------------------|------------------|--------------|\n| User Data | Indefinite | Daily | Hot Storage |\n| Drill Attempts | 12 months | Daily | Hot Storage |\n| Simulation Attempts | 6 months | Daily | Warm Storage |\n| Analytics Data | 24 months | Weekly | Cold Storage |\n| System Logs | 3 months | Weekly | Cold Storage |", "data_requirements.data_storage.backup_strategy": "- **Real-time Replication**\n  - Continuous streaming replication to standby database\n  - Automatic failover capability\n  - 99.99% data consistency guarantee\n- **Point-in-Time Recovery**\n  - WAL (Write-Ahead Logging) retention: 7 days\n  - Hourly incremental backups\n  - Daily full backups\n  - 30-day backup retention", "data_requirements.data_storage.data_redundancy": "- Geographic redundancy across three regions\n- Multi-AZ deployment within each region\n- Read replicas for high-traffic regions", "data_requirements.data_processing.data_flow_diagram": "```mermaid\nflowchart TD\n    A[User Input] --> B{Input Type}\n    B -->|Text| C[Text Processor]\n    B -->|Voice| D[Speech-to-Text]\n    B -->|Image| E[OCR Processing]\n    C & D & E --> F[Input Sanitization]\n    F --> G[AI Evaluation Pipeline]\n    G --> H[Feedback Generation]\n    H --> I[Response Storage]\n    I --> J[Analytics Processing]\n    J --> K[(Analytics DB)]\n    L[Background Job] --> M{Data Cleanup}\n    M -->|Archive| N[(Cold Storage)]\n    M -->|Delete| O[Secure Deletion]\n```", "data_requirements.data_processing.security_measures": "| Layer | Security Control | Implementation |\n|-------|-----------------|----------------|\n| Transport | Data in Transit | - TLS 1.3 encryption<br>- Perfect forward secrecy<br>- Certificate pinning |\n| Storage | Data at Rest | - AES-256 encryption<br>- Key rotation every 90 days<br>- Encrypted backups |\n| Application | Access Control | - Row-level security<br>- Column encryption<br>- JWT validation |\n| Database | Query Protection | - Prepared statements<br>- Query timeouts<br>- Connection pooling |", "data_requirements.data_processing.data_processing_rules": "1. **Input Processing**\n   - Sanitize all user inputs\n   - Validate against XSS and SQL injection\n   - Convert to standardized format\n2. **AI Processing**\n   - Rate limit API calls\n   - Cache common responses\n   - Implement retry logic\n3. **Analytics Processing**\n   - Aggregate hourly\n   - Anonymize personal data\n   - Implement data sampling\n4. **Cleanup Processing**\n   - Archive after retention period\n   - Secure deletion verification\n   - Maintain audit trail", "external_interfaces.user_interfaces.general_requirements": "| Requirement | Implementation |\n|-------------|----------------|\n| Responsive Design | - Breakpoints: 320px, 768px, 1024px, 1440px<br>- Mobile-first approach<br>- Fluid typography scaling<br>- Flexible grid layouts |\n| Accessibility | - WCAG 2.1 AA compliance<br>- Screen reader compatibility<br>- Keyboard navigation support<br>- Minimum contrast ratio 4.5:1 |\n| Theme Support | - Light/dark mode toggle<br>- System preference detection<br>- Consistent color variables<br>- Shadcn theming integration |", "external_interfaces.user_interfaces.core_interface_components": "| Component | Requirements |\n|-----------|--------------|\n| Navigation | - Persistent top navigation bar<br>- Collapsible side menu on mobile<br>- Breadcrumb navigation<br>- Progress indicators |\n| Forms | - Real-time validation<br>- Error messaging<br>- Autosave functionality<br>- Progress preservation |\n| Modals | - Keyboard dismissible<br>- Backdrop blur effect<br>- Mobile-optimized sizing<br>- Focus trap implementation |\n| Feedback | - Toast notifications<br>- Loading states<br>- Error boundaries<br>- Success confirmations |", "external_interfaces.user_interfaces.drill_interface_requirements": "| Feature | Specifications |\n|---------|---------------|\n| Timer Display | - Countdown visualization<br>- Color-coded time warnings<br>- Pause/resume controls<br>- Time remaining alerts |\n| Input Methods | - Rich text editor<br>- Voice input recorder<br>- Image upload interface<br>- Mathematical expression editor |\n| Progress Tracking | - Completion percentage<br>- Step indicators<br>- Save state markers<br>- Resume capability |", "external_interfaces.software_interfaces.external_service_integration": "| Service | Interface Type | Purpose |\n|---------|---------------|----------|\n| OpenAI | REST API | - Response evaluation<br>- Feedback generation<br>- Voice transcription<br>- Image analysis |\n| Stripe | REST API + SDK | - Payment processing<br>- Subscription management<br>- Invoice generation<br>- Refund handling |\n| Supabase | SDK + WebSocket | - Data persistence<br>- Real-time updates<br>- Authentication<br>- File storage |\n| Resend | REST API | - Email notifications<br>- Verification emails<br>- Password resets<br>- System alerts |", "external_interfaces.software_interfaces.api_specifications": "```typescript\ninterface APIResponse {\n  success: boolean;\n  data?: any;\n  error?: {\n    code: string;\n    message: string;\n    details?: any;\n  };\n  metadata: {\n    timestamp: string;\n    requestId: string;\n  };\n}\ninterface APIError extends Error {\n  code: string;\n  details?: any;\n  requestId: string;\n}\n```", "external_interfaces.software_interfaces.integration_requirements": "| Component | Requirements |\n|-----------|--------------|\n| Error Handling | - Retry logic with exponential backoff<br>- Fallback mechanisms<br>- Error reporting<br>- Circuit breaker implementation |\n| Rate Limiting | - Request queuing<br>- Token bucket algorithm<br>- Priority handling<br>- Quota management |\n| Caching | - Redis implementation<br>- Cache invalidation rules<br>- TTL configuration<br>- Stale-while-revalidate |", "external_interfaces.communication_interfaces.network_requirements": "| Category | Specification |\n|----------|--------------|\n| Protocol | - HTTPS (TLS 1.3)<br>- WebSocket (WSS)<br>- HTTP/2 support<br>- gRPC for internal services |\n| Data Format | - JSON for REST APIs<br>- Protocol Buffers for gRPC<br>- MessagePack for WebSocket<br>- UTF-8 encoding |\n| Security | - CORS policy enforcement<br>- API key authentication<br>- JWT token validation<br>- Rate limiting |", "external_interfaces.communication_interfaces.real-time_communication": "```mermaid\nsequenceDiagram\n    participant Client\n    participant WebSocket\n    participant Server\n    participant Services\n    Client->>WebSocket: Connect\n    WebSocket->>Server: Authenticate\n    Server->>WebSocket: Connection Established\n    loop Real-time Updates\n        Services->>Server: State Change\n        Server->>WebSocket: Push Update\n        WebSocket->>Client: Update UI\n    end\n```", "external_interfaces.communication_interfaces.integration_patterns": "| Pattern | Implementation |\n|---------|----------------|\n| Pub/Sub | - Topic-based messaging<br>- Message persistence<br>- Delivery guarantees<br>- Dead letter queues |\n| Event Sourcing | - Event store<br>- Event replay capability<br>- Versioning support<br>- Snapshot management |\n| CQRS | - Command validation<br>- Query optimization<br>- Read/write separation<br>- Cache integration |", "appendices.a._glossary": "| Term | Definition |\n|------|------------|\n| Case Interview | A job interview focused on analyzing and solving business problems in real-time |\n| Drill | A focused practice exercise targeting specific case interview skills |\n| MECE | Mutually Exclusive, Collectively Exhaustive - a problem-solving framework |\n| Market Sizing | Estimation technique to determine total market value or volume |\n| Break Even | Point at which total revenue equals total costs |\n| Case Math | Quantitative analysis specific to business case scenarios |\n| Synthesizing | Process of combining information to form coherent conclusions |\n| Food Chain | Hierarchical relationship between species in ecosystem simulation |", "appendices.b._acronyms": "| Acronym | Expansion |\n|---------|-----------|\n| API | Application Programming Interface |\n| CCPA | California Consumer Privacy Act |\n| CORS | Cross-Origin Resource Sharing |\n| CQRS | Command Query Responsibility Segregation |\n| GDPR | General Data Protection Regulation |\n| JWT | JSON Web Token |\n| MECE | Mutually Exclusive, Collectively Exhaustive |\n| ORM | Object-Relational Mapping |\n| PCI DSS | Payment Card Industry Data Security Standard |\n| SQL | Structured Query Language |\n| SRS | Software Requirements Specification |\n| TLS | Transport Layer Security |\n| TTL | Time To Live |\n| UI | User Interface |\n| WCAG | Web Content Accessibility Guidelines |\n| WSS | WebSocket Secure |\n| YoY | Year over Year |", "appendices.c._additional_references.technical_documentation": "| Resource | Purpose |\n|----------|----------|\n| [NextJS Documentation](https://nextjs.org/docs) | Framework reference |\n| [Supabase Documentation](https://supabase.io/docs) | Database and authentication |\n| [Stripe API Reference](https://stripe.com/docs/api) | Payment integration |\n| [OpenAI API Documentation](https://platform.openai.com/docs) | AI integration |\n| [Shadcn Documentation](https://ui.shadcn.com) | UI components |", "appendices.c._additional_references.business_references": "| Resource | Purpose |\n|----------|----------|\n| McKinsey Digital Assessment Guide | Simulation reference |\n| Case Interview Frameworks | Drill structure reference |\n| Consulting Math Guidelines | Calculation drill reference |\n| Market Sizing Methodologies | Market sizing drill reference |", "appendices.d._implementation_notes.development_environment_setup": "```bash", "required_environment_variables": "NEXT_PUBLIC_SUPABASE_URL=\nNEXT_PUBLIC_SUPABASE_ANON_KEY=\nSTRIPE_SECRET_KEY=\nOPENAI_API_KEY=\nRESEND_API_KEY=", "development_commands": "npm run dev     # Start development server\nnpm run build   # Production build\nnpm run test    # Run test suite\n```", "development_commands.database_initialization": "```sql\n-- Core tables initialization\nCREATE TABLE users (\n  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n  email TEXT UNIQUE NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\n);\nCREATE TABLE subscriptions (\n  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n  user_id UUID REFERENCES users(id),\n  stripe_subscription_id TEXT UNIQUE,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW())\n);\n```", "development_commands.database_initialization.api_rate_limits": "| Service | Free Tier | Paid Tier |\n|---------|-----------|------------|\n| OpenAI | 3 requests/minute | 60 requests/minute |\n| Drill Attempts | 2 per type | Unlimited |\n| Simulation | Demo version only | Full version |"}