# Human Tasks:
# 1. Create a copy of .env.example as .env and set secure passwords
# 2. Ensure ports 5432, 6379, 1025, and 8025 are available on the host machine
# 3. Verify Docker has sufficient memory allocation for Redis max memory setting

# Requirement: Development Environment - Configure containerized development environment with required services
version: '3.8'

services:
  # Requirement: Database Setup - Configure local PostgreSQL database for development
  # Image: supabase/postgres:14.1.0
  postgres:
    image: supabase/postgres:14.1.0
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-case_interview_platform}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - development
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Requirement: Caching System - Set up Redis caching service for local development
  # Image: redis:6-alpine
  redis:
    image: redis:6-alpine
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_MAXMEMORY=${REDIS_MAX_MEMORY:-2gb}
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - development
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Email testing service for development
  # Image: mailhog/mailhog:latest
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_UI_PORT:-8025}:8025"
    networks:
      - development
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  # Persistent storage for PostgreSQL data
  postgres_data:
    driver: local
  # Persistent storage for Redis data
  redis_data:
    driver: local

networks:
  # Internal network for development services
  development:
    driver: bridge